apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'PUBLIC_KEY'
            keyPassword 'publickeypw'
            storeFile file("$rootDir/keystore.jks")
            storePassword 'publickeystorepw'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "24.0.1"
    defaultConfig {
        applicationId "net.coronite.quizlet_math_plus"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'TEST_DEVICE_ID', ' "5305B8C6893FE4F3FF66234C569F0D5A" '
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':MathView')
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:support-v4:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:recyclerview-v7:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:design:' + rootProject.ext.supportLibVersion

    compile 'com.squareup.retrofit2:retrofit:' + rootProject.ext.retrofitVersion
    compile 'com.squareup.retrofit2:converter-gson:' + rootProject.ext.retrofitVersion

    compile 'com.google.android.gms:play-services-ads:' + rootProject.ext.playServicesVersion
    compile 'com.google.android.gms:play-services-analytics:' + rootProject.ext.playServicesVersion
    compile 'com.google.firebase:firebase-core:' + rootProject.ext.playServicesVersion

    // Required -- JUnit 4 framework
    testCompile 'junit:junit:' + rootProject.ext.junitVersion
    // Optional -- Mockito framework
    testCompile 'org.mockito:mockito-core:' + rootProject.ext.mockitoCoreVersion
    testCompile 'org.powermock:powermock-api-mockito:' + rootProject.ext.powermockApiVersion
    testCompile 'org.powermock:powermock-module-junit4:'  + rootProject.ext.powermockJunitVersion
    // Required for instrumented tests
    androidTestCompile 'com.android.support:support-annotations:' + rootProject.ext.supportLibVersion
    androidTestCompile 'com.android.support.test:runner:' + rootProject.ext.testRunnerVersion
}

apply plugin: 'com.google.gms.google-services'

